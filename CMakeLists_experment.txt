cmake_minimum_required (VERSION 0.9.1)
project (ExtremeCUnit)

SET(MY_OWN_INSTALL_PREFIX "/usr" CACHE PATH "Prefix prepended to install directories")
SET(CMAKE_INSTALL_PREFIX "${MY_OWN_INSTALL_PREFIX}" CACHE INTERNAL "Prefix prepended to install directories" FORCE)

SET(LIBRARY_FLAGS '-pie -Wl,--rpath,.,--rpath,dist -lExtremeCUnit -ldl')
SET(C_FLAGS '-DUNIT_TEST -fPIC -pie -rdynamic')
configure_file (
   "ExtremeCUnit.pc.in"
   "ExtremeCUnit.pc")

## Compiler flags
if(CMAKE_COMPILER_IS_GNUCXX)
	set(CMAKE_CFLAGS " -ggdb3")
	set(CMAKE_CXX_FLAGS "-ggdb3")
endif()

set(COVERAGE_FLAGS -fprofile-arcs -ftest-coverage)


add_library(ExtremeCUnit main.c runner.c findtest_names.c assert_support.c) 

set(test CMAKE_C_FLAGS )
add_executable(test unittest_tests.c unittest_cpp_tests.cc) 
add_executable(test_coverage unittest_tests.c unittest_cpp_tests.cc ExtremeCUnit main.c runner.c findtest_names.c assert_support.c) 


SET_TARGET_PROPERTIES(test PROPERTIES COMPILE_FLAGS "-pie -fPIC  -DUNIT_TEST")

SET_TARGET_PROPERTIES(ExtremeCUnit PROPERTIES COMPILE_FLAGS "-Wall -ggdb  -fPIC -pie -rdynamic")

target_link_libraries(test -shared -pie ExtremeCUnit dl)

SET_TARGET_PROPERTIES(test_coverage PROPERTIES COMPILE_FLAGS "$(COVERAGE_FLAGS) -Wall -ggdb -pie -fPIC -rdynamic -DUNIT_TEST")
target_link_libraries(test_coverage -shared -pie dl)


add_custom_target(PCFILE ExtremeCUnit.pc )
add_custom_target(run ./test )
add_custom_target(runv ./test -v)
add_custom_target(coverage ./test_coverage -v)

INSTALL_FILES(/include ExtremeCUnit.h)
INSTALL_TARGETS(/lib ExtremeCUnit)
INSTALL_TARGETS(/lib/pkgconfig PCFILE)
